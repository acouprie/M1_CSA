/*
 * Definitions for board AT91SAM7S
 * Generated by genh v1.1 (ven. janv. 27 2017 13:49:12)
 */

#ifndef AT91SAM7S_H
#define AT91SAM7S_H
#include <sys/types.h>
typedef __uint32_t uint32_t;

#define MCK 4000000

/* definitions for AIC*/
#define ID_PIO 0x2
#define ID_TC0 0xc
#define AIC_LOW_LEVEL 0x0
#define AIC_NEGATIVE_EDGE 0x20
#define AIC_HIGH_LEVEL 0x40
#define AIC_POSITIVE_EDGE 0x60

/* ARM */
#define	MASK_IRQ	{ asm("STMFD sp!, { r0 }"); asm("MRS r0, CPSR"); asm("ORR r0, r0, #0x80"); asm("MSR CPSR, r0"); asm("LDMFD sp!, { r0 }"); }
#define	UNMASK_IRQ	{ asm("STMFD sp!, { r0 }"); asm("MRS r0, CPSR"); asm("BIC r0, r0, #0x80"); asm("MSR CPSR, r0"); asm("LDMFD sp!, { r0 }"); }

/* definitions for TC*/
#define TC_SYNC (1 << 0)
#define TC_TC0XC0S_TCLK0 (0x0 << 0)
#define TC_TC0XC0S_NONE (0x1 << 0)
#define TC_TC0XC0S_TIOA1 (0x2 << 0)
#define TC_TC0XC0S_TIOA2 (0x3 << 0)
#define TC_TC1XC1S_TCLK1 (0x0 << 2)
#define TC_TC1XC1S_NONE (0x1 << 2)
#define TC_TC1XC1S_TIOA0 (0x2 << 2)
#define TC_TC1XC1S_TIOA2 (0x3 << 2)
#define TC_TC2XC2S_TCLK2 (0x0 << 4)
#define TC_TC2XC2S_NONE (0x1 << 4)
#define TC_TC2XC2S_TIOA0 (0x2 << 4)
#define TC_TC2XC2S_TIOA1 (0x3 << 4)
#define TC_CLKEN (1 << 0)
#define TC_CLKDIS (1 << 1)
#define TC_SWTRG (1 << 2)
#define TC_TCCLKS_CLOCK1 (0x0 << 0)
#define TC_TCCLKS_CLOCK2 (0x1 << 0)
#define TC_TCCLKS_CLOCK3 (0x2 << 0)
#define TC_TCCLKS_CLOCK4 (0x3 << 0)
#define TC_TCCLKS_CLOCK5 (0x4 << 0)
#define TC_TCCLKS_XC0 (0x5 << 0)
#define TC_TCCLKS_XC1 (0x6 << 0)
#define TC_TCCLKS_XC2 (0x7 << 0)
#define TC_CLKI (1 << 3)
#define TC_BURST_NONE (0x0 << 4)
#define TC_BURST_XC0 (0x1 << 4)
#define TC_BURST_XC1 (0x2 << 4)
#define TC_BURST_XC2 (0x3 << 4)
#define TC_LDBSTOP (1 << 6)
#define TC_LDBDIS (1 << 7)
#define TC_ETRGEDG_NONE (0x0 << 8)
#define TC_ETRGEDG_RISE (0x1 << 8)
#define TC_ETRGEDG_FALL (0x2 << 8)
#define TC_ETRGEDG_BOTH (0x3 << 8)
#define TC_ABETRG (1 << 10)
#define TC_CPCTRG (1 << 14)
#define TC_WAVE (1 << 15)
#define TC_LDRA_NONE (0x0 << 16)
#define TC_LDRA_RISE (0x1 << 16)
#define TC_LDRA_FALL (0x2 << 16)
#define TC_LDRA_BOTH (0x3 << 16)
#define TC_LDRB_NONE (0x0 << 18)
#define TC_LDRB_RISE (0x1 << 18)
#define TC_LDRB_FALL (0x2 << 18)
#define TC_LDRB_BOTH (0x3 << 18)
#define TC_CPCSTOP (1 << 6)
#define TC_CPCDIS (1 << 7)
#define TC_EEVTEDG_NONE (0x0 << 8)
#define TC_EEVTEDG_RISE (0x1 << 8)
#define TC_EEVTEDG_FALL (0x2 << 8)
#define TC_EEVTEDG_BOTH (0x3 << 8)
#define TC_EEVT_TIOB (0x0 << 10)
#define TC_EEVT_XC0 (0x1 << 10)
#define TC_EEVT_XC1 (0x2 << 10)
#define TC_EEVT_XC2 (0x3 << 10)
#define TC_ENETRG (1 << 12)
#define TC_WAVSEL_UP_WO (0x0 << 13)
#define TC_WAVSEL_UP_WI (0x1 << 13)
#define TC_WAVSEL_UPDOWN_WO (0x2 << 13)
#define TC_WAVSEL_UPDWON_WI (0x3 << 13)
#define TC_ACPA_NONE (0x0 << 16)
#define TC_ACPA_SET (0x1 << 16)
#define TC_ACPA_CLEAR (0x2 << 16)
#define TC_ACPA_TOGGLE (0x3 << 16)
#define TC_ACPC_NONE (0x0 << 18)
#define TC_ACPC_SET (0x1 << 18)
#define TC_ACPC_CLEAR (0x2 << 18)
#define TC_ACPC_TOGGLE (0x3 << 18)
#define TC_AEEVT_NONE (0x0 << 20)
#define TC_AEEVT_SET (0x1 << 20)
#define TC_AEEVT_CLEAR (0x2 << 20)
#define TC_AEEVT_TOGGLE (0x3 << 20)
#define TC_ASWTRG_NONE (0x0 << 22)
#define TC_ASWTRG_SET (0x1 << 22)
#define TC_ASWTRG_CLEAR (0x2 << 22)
#define TC_ASWTRG_TOGGLE (0x3 << 22)
#define TC_BCPA_NONE (0x0 << 16)
#define TC_BCPA_SET (0x1 << 16)
#define TC_BCPA_CLEAR (0x2 << 16)
#define TC_BCPA_TOGGLE (0x3 << 16)
#define TC_BCPC_NONE (0x0 << 18)
#define TC_BCPC_SET (0x1 << 18)
#define TC_BCPC_CLEAR (0x2 << 18)
#define TC_BCPC_TOGGLE (0x3 << 18)
#define TC_BEEVT_NONE (0x0 << 20)
#define TC_BEEVT_SET (0x1 << 20)
#define TC_BEEVT_CLEAR (0x2 << 20)
#define TC_BEEVT_TOGGLE (0x3 << 20)
#define TC_BSWTRG_NONE (0x0 << 22)
#define TC_BSWTRG_SET (0x1 << 22)
#define TC_BSWTRG_CLEAR (0x2 << 22)
#define TC_BSWTRG_TOGGLE (0x3 << 22)
#define TC_COVFS (1 << 0)
#define TC_LOVRS (1 << 1)
#define TC_CPAS (1 << 2)
#define TC_CPBS (1 << 3)
#define TC_CPCS (1 << 4)
#define TC_LDRAS (1 << 5)
#define TC_LDRBS (1 << 6)
#define TC_ETRGS (1 << 7)
#define TC_CLKSTA (1 << 16)
#define TC_MTIOA (1 << 17)
#define TC_MTIOB (1 << 18)
#define TC_CPCS (1 << 4)
#define TC_COVFS (1 << 0)

#define US_RSTRX (1 << 2)
#define US_RSTTX (1 << 3)
#define US_RXEN (1 << 4)
#define US_RXDIS (1 << 5)
#define US_TXEN (1 << 6)
#define US_TXDIS (1 << 7)
#define US_RSTSTA (1 << 8)
#define US_STTBRK (1 << 9)
#define US_STPBRK (1 << 10)
#define US_STTTO (1 << 11)
#define US_SENDA (1 << 12)
#define US_RSTIT (1 << 13)
#define US_RSTNACK (1 << 14)
#define US_RETTO (1 << 15)
#define US_DTREN (1 << 16)
#define US_DTRDIS (1 << 17)
#define US_RTSEN (1 << 18)
#define US_RTSDIS (1 << 19)
#define US_MODE(x) ((x) << 0)
#define US_USCLKS_MCK ((0x0) << 4)
#define US_USCLKS_MCK_DIV ((0x1) << 4)
#define US_USCLKS_SCK ((0x3) << 4)
#define US_CHRL_5 ((0x0) << 6)
#define US_CHRL_6 ((0x1) << 6)
#define US_CHRL_7 ((0x2) << 6)
#define US_CHRL_8 ((0x3) << 6)
#define US_SYNC (1 << 8)
#define US_PAR_EVEN ((0x0) << 9)
#define US_PAR_ODD ((0x1) << 9)
#define US_PAR_FORCED_0 ((0x2) << 9)
#define US_PAR_FORCED_1 ((0x3) << 9)
#define US_PAR_NONE ((0x4) << 9)
#define US_PAR_MULTI ((0x6) << 9)
#define US_NBSTOP_1 ((0x0) << 12)
#define US_NBSTOP_1_5 ((0x1) << 12)
#define US_NBSTOP_2 ((0x2) << 12)
#define US_CHMODE_NORMAL ((0x0) << 14)
#define US_CHMODE_ECHO ((0x1) << 14)
#define US_CHMODE_LOCAL ((0x2) << 14)
#define US_CHMODE_REMOTE ((0x3) << 14)
#define US_MSBF (1 << 16)
#define US_MODE9 (1 << 17)
#define US_CLKO (1 << 18)
#define US_OVER (1 << 19)
#define US_INACK (1 << 20)
#define US_DSNACK (1 << 21)
#define US_MAX_ITERATION(x) ((x) << 24)
#define US_FILTER (1 << 28)
#define US_RXRDY (1 << 0)
#define US_TXRDY (1 << 1)
#define US_RXBRK (1 << 2)
#define US_ENDRX (1 << 3)
#define US_ENDTX (1 << 4)
#define US_OVRE (1 << 5)
#define US_FRAME (1 << 6)
#define US_PARE (1 << 7)
#define US_TIMEOUT (1 << 8)
#define US_TXEMPTY (1 << 9)
#define US_ITERATION (1 << 10)
#define US_TXBUFE (1 << 11)
#define US_RXBUFE (1 << 12)
#define US_NACK (1 << 13)
#define US_RIIC (1 << 16)
#define US_DSRIC (1 << 17)
#define US_DCDIC (1 << 18)
#define US_CTSIC (1 << 19)
#define US_RI (1 << 20)
#define US_DSR (1 << 21)
#define US_DCD (1 << 22)
#define US_CTS (1 << 23)

/* definitions for AIC*/
#define AIC_BASE 0xfffff000
#define AIC_SMR ((volatile uint32_t *)(AIC_BASE + 0x0))
#define AIC_SVR ((volatile uint32_t *)(AIC_BASE + 0x80))
#define AIC_IVR (*(volatile uint32_t *)(AIC_BASE + 0x100))
#define AIC_FVR (*(volatile uint32_t *)(AIC_BASE + 0x104))
#define AIC_EOICR (*(volatile uint32_t *)(AIC_BASE + 0x130))
#define AIC_ISR (*(volatile uint32_t *)(AIC_BASE + 0x108))
#define AIC_IPR (*(volatile uint32_t *)(AIC_BASE + 0x10c))
#define AIC_IMR (*(volatile uint32_t *)(AIC_BASE + 0x110))
#define AIC_CISR (*(volatile uint32_t *)(AIC_BASE + 0x114))
#define AIC_IECR (*(volatile uint32_t *)(AIC_BASE + 0x120))
#define AIC_IDCR (*(volatile uint32_t *)(AIC_BASE + 0x124))
#define AIC_ICCR (*(volatile uint32_t *)(AIC_BASE + 0x128))
#define AIC_ISCR (*(volatile uint32_t *)(AIC_BASE + 0x12c))
#define AIC_SPU (*(volatile uint32_t *)(AIC_BASE + 0x134))
#define AIC_DCR (*(volatile uint32_t *)(AIC_BASE + 0x138))
#define AIC_FFER (*(volatile uint32_t *)(AIC_BASE + 0x140))
#define AIC_FFDR (*(volatile uint32_t *)(AIC_BASE + 0x144))
#define AIC_FFSR (*(volatile uint32_t *)(AIC_BASE + 0x148))

/* definitions for PIO*/
#define PIO_BASE 0xfffff400
#define YELLOW 0x10000
#define GREEN 0x20000
#define PUSH1 0x40000
#define PUSH2 0x80000
#define PIO_PER (*(volatile uint32_t *)(PIO_BASE + 0x0))
#define PIO_PDR (*(volatile uint32_t *)(PIO_BASE + 0x4))
#define PIO_PSR (*(volatile uint32_t *)(PIO_BASE + 0x8))
#define PIO_OER (*(volatile uint32_t *)(PIO_BASE + 0x10))
#define PIO_ODR (*(volatile uint32_t *)(PIO_BASE + 0x14))
#define PIO_OSR (*(volatile uint32_t *)(PIO_BASE + 0x18))
#define PIO_SODR (*(volatile uint32_t *)(PIO_BASE + 0x30))
#define PIO_CODR (*(volatile uint32_t *)(PIO_BASE + 0x34))
#define PIO_ODSR (*(volatile uint32_t *)(PIO_BASE + 0x38))
#define PIO_PDSR (*(volatile uint32_t *)(PIO_BASE + 0x3c))
#define PIO_IER (*(volatile uint32_t *)(PIO_BASE + 0x40))
#define PIO_IDR (*(volatile uint32_t *)(PIO_BASE + 0x44))
#define PIO_IMR (*(volatile uint32_t *)(PIO_BASE + 0x48))
#define PIO_ISR (*(volatile uint32_t *)(PIO_BASE + 0x4c))

/* definitions for TC*/
#define TC_BASE 0xfffa0000
#define TC0_CCR (*(volatile uint32_t *)(TC_BASE + 0x0))
#define TC0_CMR (*(volatile uint32_t *)(TC_BASE + 0x4))
#define TC0_CV (*(volatile uint32_t *)(TC_BASE + 0x10))
#define TC0_RA (*(volatile uint32_t *)(TC_BASE + 0x14))
#define TC0_RB (*(volatile uint32_t *)(TC_BASE + 0x18))
#define TC0_RC (*(volatile uint32_t *)(TC_BASE + 0x1c))
#define TC0_SR (*(volatile uint32_t *)(TC_BASE + 0x20))
#define TC0_IER (*(volatile uint32_t *)(TC_BASE + 0x24))
#define TC0_IDR (*(volatile uint32_t *)(TC_BASE + 0x28))
#define TC0_IMR (*(volatile uint32_t *)(TC_BASE + 0x2c))
#define TC1_CCR (*(volatile uint32_t *)(TC_BASE + 0x40))
#define TC1_CMR (*(volatile uint32_t *)(TC_BASE + 0x44))
#define TC1_CV (*(volatile uint32_t *)(TC_BASE + 0x50))
#define TC1_RA (*(volatile uint32_t *)(TC_BASE + 0x54))
#define TC1_RB (*(volatile uint32_t *)(TC_BASE + 0x58))
#define TC1_RC (*(volatile uint32_t *)(TC_BASE + 0x5c))
#define TC1_SR (*(volatile uint32_t *)(TC_BASE + 0x60))
#define TC1_IER (*(volatile uint32_t *)(TC_BASE + 0x64))
#define TC1_IDR (*(volatile uint32_t *)(TC_BASE + 0x68))
#define TC1_IMR (*(volatile uint32_t *)(TC_BASE + 0x6c))
#define TC2_CCR (*(volatile uint32_t *)(TC_BASE + 0x80))
#define TC2_CMR (*(volatile uint32_t *)(TC_BASE + 0x84))
#define TC2_CV (*(volatile uint32_t *)(TC_BASE + 0x90))
#define TC2_RA (*(volatile uint32_t *)(TC_BASE + 0x94))
#define TC2_RB (*(volatile uint32_t *)(TC_BASE + 0x98))
#define TC2_RC (*(volatile uint32_t *)(TC_BASE + 0x9c))
#define TC2_SR (*(volatile uint32_t *)(TC_BASE + 0xa0))
#define TC2_IER (*(volatile uint32_t *)(TC_BASE + 0xa4))
#define TC2_IDR (*(volatile uint32_t *)(TC_BASE + 0xa8))
#define TC2_IMR (*(volatile uint32_t *)(TC_BASE + 0xac))
#define TC_BCR (*(volatile uint32_t *)(TC_BASE + 0xc0))
#define TC_BMR (*(volatile uint32_t *)(TC_BASE + 0xc4))

/* definitions for US0*/
#define US0_BASE 0xfffc0000
#define US0_CR (*(volatile uint32_t *)(US0_BASE + 0x0))
#define US0_MR (*(volatile uint32_t *)(US0_BASE + 0x4))
#define US0_IMR (*(volatile uint32_t *)(US0_BASE + 0x10))
#define US0_CSR (*(volatile uint32_t *)(US0_BASE + 0x14))
#define US0_RHR (*(volatile uint32_t *)(US0_BASE + 0x18))
#define US0_THR (*(volatile uint32_t *)(US0_BASE + 0x1c))
#define US0_BRGR (*(volatile uint32_t *)(US0_BASE + 0x20))
#define US0_RTOR (*(volatile uint32_t *)(US0_BASE + 0x24))
#define US0_TTGR (*(volatile uint32_t *)(US0_BASE + 0x28))
#define US0_FIDI (*(volatile uint32_t *)(US0_BASE + 0x40))
#define US0_NER (*(volatile uint32_t *)(US0_BASE + 0x44))
#define US0_IF (*(volatile uint32_t *)(US0_BASE + 0x4c))
#define US0_IER (*(volatile uint32_t *)(US0_BASE + 0x8))
#define US0_IDR (*(volatile uint32_t *)(US0_BASE + 0xc))

#endif /* AT91SAM7S_H */
